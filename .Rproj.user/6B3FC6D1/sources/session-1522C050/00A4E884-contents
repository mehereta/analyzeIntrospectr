
#Analysis Functions

#Function 11:
#' Statistical test
#'
#' @description carries out a t-test or anova test based on the number of timepoints and whether the data is paired or not to assess magic word learning. There is also an option to plot the results
#'
#' @param dataframe includes information about the participants
#' @param data_quality_type indication of whether the data is 'paired' or 'not'
#' @param number_of_timepoints number of timepoints
#' @param magicgroup_number the group number of the magic word
#' @param group_number the group number
#' @param plot optional plot for the results (write 'TRUE' to plot)
#'
#' @return statistical test results and optional plot
#'
#' @examples statistical.test(final_processed_file,'NOT paired',3,1,1,TRUE)
#' @export
statistical.test <- function(dataframe,data_quality_type, number_of_timepoints, group_number, magicgroup_number,plot=TRUE/FALSE){
  if (number_of_timepoints<=2) {
    if (data_quality_type=='paired'){ #check way to run a paired t test
      dataframe %>%
        filter(block!='practice')%>%
        filter(group==group_number) %>%
        filter(!is.na(mouse.clicked_name)) %>%
        filter(itemType=='magic') %>%
        filter(magic_word_group==magic_group_number) %>%
        mutate(timepoint=as.factor(timepoint)) %>%
        group_by(timepoint,participant,mouse.clicked_name) %>%
        summarise(count = n()) %>%
        filter(mouse.clicked_name == 'familliar_resp') %>%
        ggplot(aes(x=timepoint, y = count, fill = timepoint))+
        geom_boxplot()+
        ggtitle('Average of Familiar Responses for Magic Words over time')}
    else {
      t_data = dataframe%>%
        filter(block!='practice')%>%
        filter(group==group_number) %>%
        filter(!is.na(mouse.clicked_name)) %>%
        filter(itemType=='magic') %>%
        filter(magic_word_group == magicgroup_number) %>%
        mutate(timepoint=as.factor(timepoint)) %>%
        group_by(timepoint,participant,mouse.clicked_name) %>%
        summarise(count = n())%>%
        filter(mouse.clicked_name == 'familliar_resp') %>%
        pivot_wider(id_cols = participant, names_from=timepoint, names_prefix = "timepoint_", values_from = count)
      print(t.test(x=t_data$timepoint_1,y=t_data$timepoint_2))
      print(cohensD(x=t_data$timepoint_1,y=t_data$timepoint_2))
    }}
  #anova for more than 2 timepoints
  else {
    mod_data <- dataframe %>%
      filter(block!='practice')%>%
      filter(group==group_number) %>%
      filter(!is.na(mouse.clicked_name)) %>%
      filter(itemType=='magic') %>%
      filter(magic_word_group == magicgroup_number) %>%
      mutate(timepoint=as.factor(timepoint)) %>%
      group_by(participant,timepoint,mouse.clicked_name) %>%
      summarise(count = n())%>%
      filter(mouse.clicked_name == 'familliar_resp') %>%
      ungroup()
    #fit repeated measures ANOVA model
    model <- aov(count~factor(timepoint)+Error(factor(participant)), data = mod_data)
    #view model summary
    print(summary(model))
    # post-hoc tests to see where significant differences are
    print(emmeans(model, list(pairwise ~ timepoint), adjust = "tukey", lmer.df = "asymptotic"))
  }

  #optional plotting
  if (plot==TRUE){
    print(dataframe %>%
      filter(block!='practice')%>%
      filter(group==group_number) %>%
      filter(magic_word_group == magicgroup_number) %>%
      filter(!is.na(mouse.clicked_name)) %>%
      filter(itemType=='magic') %>%
      mutate(timepoint=as.factor(timepoint)) %>%
      group_by(timepoint,words,mouse.clicked_name) %>%
      summarise(count = n()) %>%
      filter(mouse.clicked_name == 'familliar_resp') %>%
      ggplot(aes(x=timepoint, y = count, fill = timepoint))+
      geom_col()+
      facet_wrap(.~words)+
      ggtitle('Number of Familiar Responses for Magic Words over time'))}

}

#-----------------------------------
